// Compiled by ClojureScript 1.9.473 {}
goog.provide('untangled.ui.Layout__01_Basics');
goog.require('cljs.core');
goog.require('devcards.core');
goog.require('om.dom');
goog.require('untangled.ui.layout');
goog.require('untangled.ui.elements');
goog.require('untangled.client.core');
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),null,new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),devcards.core.markdown__GT_react.call(null,"# Layout\n\n  Untangled UI includes CSS for a responsive grid that is 12-elements wide. The `layout` namespace includes a number\n  of functions that can generate the various DOM elements with the correct classes in a more conside form to\n  make code more readable (and potentially more portable, since the concepts are not tied to DOM or CSS directly).\n\n  Some general notes:\n\n  - The helper functions accept a clj(s) map as an argument. All React properties are allowed in this map.\n  - The special attributes these helpers take will be translated to CSS for you.\n  - The resulting set of attributes will be converted to the proper JS object and passed to React DOM elements.\n\n  This causes some nice simplifications because you're always working with regular clojure data structures. Expressions\n  using the raw CSS like:\n\n  ```\n  (dom/div #js {:className \"my-custom-class u-column--2\" :style #js {:color :red}} ...)\n  ```\n\n  instead look like:\n\n  ```\n  (l/col {:width 2 :className \"my-custom-class\" :style {:color :red}} ...)\n  ```\n\n  "),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"hide-border","hide-border",1463657151),true], null)))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"rows","rows",850049680)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"rows",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Rows and Columns\n\n  Rows are created with the `row` function. Columns are created with the `col` function. Columns have a width from\n  1 to 12.\n\n  ```\n  (l/row {}\n   (l/col {:width 12 :style {:backgroundColor :yellow}} \"A row\"))\n  ```\n\n  which renders:\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),untangled.ui.layout.row.call(null,cljs.core.PersistentArrayMap.EMPTY,untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),"A row")),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"basic-grid","basic-grid",1989038908)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"basic-grid",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Basic Grid\n\n  Thus, one can create a basic layout by putting together a few rows with columns:\n\n  ```\n  (l/row {:style {:height \"200px\"}}\n    (l/col {:width 2 :style {:backgroundColor :yellow}} \"Left column\")\n    (l/col {:width 10 :style {:backgroundColor :lightgray}} \"Right column\")))\n  ```\n\n  which renders as:\n\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"height","height",1025178622),"200px"], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),"Left column"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(10),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightgray","lightgray",-845833379)], null)], null),"Right column")),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"grid-nesting","grid-nesting",1244725560)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"grid-nesting",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Nesting Grids\n\n  One can nest 12-column grids within the grid by nesting rows. This makes it possible\n  to create more complex layouts:\n\n  ```\n  (l/row {:style {:height \"200px\"}}\n    (l/col {:width 2 :style {:backgroundColor :yellow}} \"Left column\")\n    (l/col {:width 10 :style {:backgroundColor :lightgray}}\n      (l/row {}\n        (l/col {:width 12 :style {:backgroundColor :lightblue}} \"Toolbar Items\"))\n      (l/row {}\n        (l/col {:width 12 :style {:backgroundColor :orange}}\n          (dom/p nil \"Other content\")\n          (dom/p nil \"Other content\")\n          (dom/p nil \"Other content\")\n          (dom/p nil \"Other content\")))))\n  ```\n\n  which renders as:\n\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"height","height",1025178622),"200px"], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),"Left column"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(10),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightgray","lightgray",-845833379)], null)], null),untangled.ui.layout.row.call(null,cljs.core.PersistentArrayMap.EMPTY,untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"Toolbar Items")),untangled.ui.layout.row.call(null,cljs.core.PersistentArrayMap.EMPTY,untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"orange","orange",73816386)], null)], null),om.dom.p.call(null,null,"Other content"),om.dom.p.call(null,null,"Other content"),om.dom.p.call(null,null,"Other content"),om.dom.p.call(null,null,"Other content"))))),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"column-push","column-push",-1953634014)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"column-push",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Pushing Columns\n\n  There are times when you'd like to skip some number of columns. The `:push` attribute on a column can be used to\n  do this.\n\n  ```\n  (l/row {:style {:height \"200px\"}}\n    (l/col {:width 2 :style {:backgroundColor :yellow}} \"Left column\")\n    (l/col {:width 8 :push 2 :style {:backgroundColor :orange}}\n      (dom/p nil \"Other content\")\n      (dom/p nil \"Other content\")\n      (dom/p nil \"Other content\")\n      (dom/p nil \"Other content\")))\n  ```\n\n  which renders as:\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"height","height",1025178622),"200px"], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),"Left column"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),(8),new cljs.core.Keyword(null,"push","push",799791267),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"orange","orange",73816386)], null)], null),om.dom.p.call(null,null,"Other content"),om.dom.p.call(null,null,"Other content"),om.dom.p.call(null,null,"Other content"),om.dom.p.call(null,null,"Other content"))),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"consuming-unused-columns","consuming-unused-columns",-1606296818)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"consuming-unused-columns",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Consuming Unused Columns\n\n  Rows can be told how to deal with unused columns with :distribute-extra-columns as :around or :between.\n\n  ```\n  (dom/div nil\n    (l/row {:style {:backgroundColor :yellow}}\n      (l/col {:width 12 :halign :center :style {:backgroundColor :lightblue}} \"12-Column Wide\"))\n    (l/row {:distribute-extra-columns :around :style {:backgroundColor :yellow}}\n      (l/col {:width 2 :style {:backgroundColor :lightblue}} \"2-Column Wide\")\n      (l/col {:width 2 :style {:backgroundColor :lightblue}} \"2-Column Wide\")\n      (l/col {:width 2 :style {:backgroundColor :lightblue}} \"2-Column Wide\"))\n    (l/row {:distribute-extra-columns :between :style {:backgroundColor :yellow}}\n      (l/col {:width 2 :style {:backgroundColor :lightblue}} \"2-Column Wide\")\n      (l/col {:width 2 :style {:backgroundColor :lightblue}} \"2-Column Wide\")\n      (l/col {:width 2 :style {:backgroundColor :lightblue}} \"2-Column Wide\")))\n  ```\n\n  The first row rendered below is using :around. The second is using :between.\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),om.dom.div.call(null,null,untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"halign","halign",-1113968481),new cljs.core.Keyword(null,"center","center",-748944368),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"12-Column Wide")),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"distribute-extra-columns","distribute-extra-columns",-2101013909),new cljs.core.Keyword(null,"around","around",-265975553),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"2-Column Wide"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"2-Column Wide"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"2-Column Wide")),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"distribute-extra-columns","distribute-extra-columns",-2101013909),new cljs.core.Keyword(null,"between","between",1131099276),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"2-Column Wide"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"2-Column Wide"),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"width","width",-384071477),(2),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"2-Column Wide"))),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"vertical-spacing","vertical-spacing",-1739492890)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"vertical-spacing",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Vertical Spacing\n\n  The grid system in Untangled UI follows the principles of vertical rhythm. Most elements\n  are sized to a standard grid line height. This makes it easy to do a large number\n  of complex alignment things easily.\n\n  The `ui-vertical-margin` helper wraps the children in a div that includes some\n  scaled multiple of the grid line height as margin above and/or below.\n\n  The properties of this function (a clj(s) map) allow you to include any React properties on the div\n  (including additional class names with :className).\n\n  The allowed scale factors for :before and :after  (e.g. :one, :half, etc.) are in the docstring of the function.\n\n  So in the example below is adding padding around the middle row.\n\n  ```\n  (dom/div nil\n    (l/row {:style {:backgroundColor :yellow}}\n      (l/col {:width 12 :halign :center :style {:backgroundColor :lightblue}} \"12-Column Wide\"))\n    (l/ui-vertical-margin {:before :half :after :one}\n      (l/row {:style {:backgroundColor :yellow}}\n        (l/col {:width 12 :halign :center :style {:backgroundColor :lightblue}} \"12-Column Wide\")))\n    (l/row {:style {:backgroundColor :yellow}}\n      (l/col {:width 12 :halign :center :style {:backgroundColor :lightblue}} \"12-Column Wide\")))\n  ```\n\n  which renders as:\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),om.dom.div.call(null,null,untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"halign","halign",-1113968481),new cljs.core.Keyword(null,"center","center",-748944368),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"12-Column Wide")),untangled.ui.layout.ui_vertical_margin.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"before","before",-1633692388),new cljs.core.Keyword(null,"half","half",741990005),new cljs.core.Keyword(null,"after","after",594996914),new cljs.core.Keyword(null,"one","one",935007904)], null),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"halign","halign",-1113968481),new cljs.core.Keyword(null,"center","center",-748944368),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"12-Column Wide"))),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),untangled.ui.layout.col.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),(12),new cljs.core.Keyword(null,"halign","halign",-1113968481),new cljs.core.Keyword(null,"center","center",-748944368),new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"lightblue","lightblue",-1333083084)], null)], null),"12-Column Wide"))),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"responsive-grid","responsive-grid",-273563741)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"responsive-grid",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Responsive Grid\n\n  When building a grid, it is common to want to define a layout where columns have a different grid width on different\n  size screens, and variable amounts of push. The `col` function includes options to make those combinations possible.\n\n  It is also sometimes necessary to cause columns to appear/disappear based on screen size, for that see `rwhen`.\n\n  The screen size abbreviations are `sm`, `md`, `lg`, and `xl`. Those abbreviations can be used on any number of\n  `width` and `push` attributes to indicate the width/push for a column on those screen sizes (see the CSS docs for\n  information on what the screen sizes map to).\n\n  So, to make a column that is 2 wide on a small screen and otherwise 1:\n\n  ```\n  (l/row {}\n    (l/col {:width 1 :sm-width 2 } ...))\n  ```\n\n  TODO: Need to make iframe work to show examples...\n\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),om.dom.div.call(null,null,"TODO: needs iframe to demo properly"),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"untangled.ui.Layout__01_Basics","untangled.ui.Layout__01_Basics",-344878158),new cljs.core.Keyword(null,"responsive-conditionals","responsive-conditionals",19815788)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"responsive-conditionals",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"# Responsive Conditionals\n\n  It is very common in a responsive UI to want elements to disappear/appear based on the screen size. This can be\n  accomplished with `rwhen` (responsive when). It wraps the children in a `span` with the correct CSS to cause\n  the element to appear only under the condition specified.\n\n  Legal conditions are simply predefined keywords listed in the doc string of `rwhen`. The screen size dimensions\n  are detailed in the docstring of `rwhen`.\n\n  ```\n  (rwhen :large+\n     (dom/div nil \"will show on viewports of large size or bigger\"))\n\n  (rwhen :medium-\n     (dom/div nil \"will show on viewports of medium size or smaller\"))\n  ```\n  ",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),om.dom.div.call(null,null,untangled.ui.elements.ui_iframe.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),"300px",new cljs.core.Keyword(null,"height","height",1025178622),"50px",new cljs.core.Keyword(null,"scrolling","scrolling",349011090),new cljs.core.Keyword(null,"no","no",-390373634)], null),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),om.dom.link.call(null,({"rel": "stylesheet", "href": "css/untangled-ui.css"})),"Width is 300px :",untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small","small",2133478704),"SMALL "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium","medium",-1864319384),"MEDIUM "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large","large",-196820544),"LARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge","xlarge",-905930014),"XLARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small+","small+",627424606),"SMALL+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium+","medium+",-1887936266),"MEDIUM+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large+","large+",1572722677),"LARGE+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge+","xlarge+",-472611452),"XLARGE+ "))),untangled.ui.elements.ui_iframe.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),"800px",new cljs.core.Keyword(null,"height","height",1025178622),"50px",new cljs.core.Keyword(null,"scrolling","scrolling",349011090),new cljs.core.Keyword(null,"no","no",-390373634)], null),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),om.dom.link.call(null,({"rel": "stylesheet", "href": "css/untangled-ui.css"})),"Width is 800px :",untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small","small",2133478704),"SMALL "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium","medium",-1864319384),"MEDIUM "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large","large",-196820544),"LARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge","xlarge",-905930014),"XLARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small+","small+",627424606),"SMALL+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium+","medium+",-1887936266),"MEDIUM+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large+","large+",1572722677),"LARGE+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge+","xlarge+",-472611452),"XLARGE+ "))),untangled.ui.elements.ui_iframe.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),"1100px",new cljs.core.Keyword(null,"height","height",1025178622),"50px",new cljs.core.Keyword(null,"scrolling","scrolling",349011090),new cljs.core.Keyword(null,"no","no",-390373634)], null),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),om.dom.link.call(null,({"rel": "stylesheet", "href": "css/untangled-ui.css"})),"Width is 1100px :",untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small","small",2133478704),"SMALL "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium","medium",-1864319384),"MEDIUM "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large","large",-196820544),"LARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge","xlarge",-905930014),"XLARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small+","small+",627424606),"SMALL+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium+","medium+",-1887936266),"MEDIUM+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large+","large+",1572722677),"LARGE+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge+","xlarge+",-472611452),"XLARGE+ "))),untangled.ui.elements.ui_iframe.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),"1400px",new cljs.core.Keyword(null,"height","height",1025178622),"50px",new cljs.core.Keyword(null,"scrolling","scrolling",349011090),new cljs.core.Keyword(null,"no","no",-390373634)], null),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),om.dom.link.call(null,({"rel": "stylesheet", "href": "css/untangled-ui.css"})),"Width is 1400px :",untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small","small",2133478704),"SMALL "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium","medium",-1864319384),"MEDIUM "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large","large",-196820544),"LARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge","xlarge",-905930014),"XLARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small+","small+",627424606),"SMALL+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium+","medium+",-1887936266),"MEDIUM+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large+","large+",1572722677),"LARGE+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge+","xlarge+",-472611452),"XLARGE+ "))),untangled.ui.elements.ui_iframe.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"width","width",-384071477),"3400px",new cljs.core.Keyword(null,"height","height",1025178622),"50px",new cljs.core.Keyword(null,"scrolling","scrolling",349011090),new cljs.core.Keyword(null,"no","no",-390373634)], null),untangled.ui.layout.row.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"style","style",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"backgroundColor","backgroundColor",1738438491),new cljs.core.Keyword(null,"yellow","yellow",-881035449)], null)], null),om.dom.link.call(null,({"rel": "stylesheet", "href": "css/untangled-ui.css"})),"Width is 3400px :",untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small","small",2133478704),"SMALL "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium","medium",-1864319384),"MEDIUM "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large","large",-196820544),"LARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge","xlarge",-905930014),"XLARGE "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"small+","small+",627424606),"SMALL+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"medium+","medium+",-1887936266),"MEDIUM+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"large+","large+",1572722677),"LARGE+ "),untangled.ui.layout.rwhen.call(null,new cljs.core.Keyword(null,"xlarge+","xlarge+",-472611452),"XLARGE+ ")))),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.PersistentArrayMap.EMPTY], null));
})], null));

//# sourceMappingURL=Layout__01_Basics.js.map?rel=1489703354518