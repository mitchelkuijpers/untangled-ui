["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$ReactDOM",["^ ","~$render",["^ "],"~$findDOMNode",["^ "]],"~$React",["^ ","~$Component",["^ ","~$apply",["^ "],"~$prototype",["^ "]]],"~$Object",["^ ","~$contentDocument",["^ ","~$body",["^ ","~$appendChild",["^ "]]]],"~$document",["^ ","~$createElement",["^ "]]],"~:use-macros",["^ ","~$defui","~$om.next","~$icon","~$untangled.icons"],"~:excludes",["~#set",[]],"~:name","~$untangled.ui.elements","~:imports",null,"~:requires",["^ ","~$untangled.ui.menu","^L","~$log","~$untangled.client.logging","~$dom","~$om.dom","~$menu","^L","^P","^P","^N","^N","~$om","^C","^C","^C","~$untangled.events","^S","^E","^E"],"~:uses",["^ ","^B","^C","^D","^E"],"~:defs",["^ ","~$ui-dialog-title",["^ ","^H","~$untangled.ui.elements/ui-dialog-title","~:file","src/main/untangled/ui/elements.cljc","~:line",411,"~:column",1,"~:end-line",411,"~:end-column",21,"~:meta",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",411,"^Z",6,"^[",411,"^10",21],"~:doc","Render a dialog's title (using supplied DOM children). Should only be used in a ui-dialog","~:tag","~$any"],"~$ui-notification-body",["^ ","^H","~$untangled.ui.elements/ui-notification-body","^X","src/main/untangled/ui/elements.cljc","^Y",498,"^Z",1,"^[",498,"^10",26,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",498,"^Z",6,"^[",498,"^10",26],"^12","Render a notification body. Should only be used in a ui-notification","^13","^14"],"~$ui-dialog",["^ ","^H","~$untangled.ui.elements/ui-dialog","^X","src/main/untangled/ui/elements.cljc","^Y",458,"^Z",1,"^[",458,"^10",15,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",458,"^Z",6,"^[",458,"^10",15],"^12","Render a dialog. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  Options:\n\n  `:visible` - A boolean. When true the dialog is on-screen. When not, it is hidden. Allows you to keep the dialog\n  in the DOM.\n  `:full-screen` - A boolean. Renders the dialog to consume the entire screen when true. (useful for mobile).\n  `:modal` - A boolean. When true the dialog will block the rest of the UI.\n  `:className` - Additional CSS classes to place on the dialog.\n  `:key` - React key\n  `:onClose` - A callback that advises *your* code that the user is indicating a desire to be out of the dialog\n  (e.g. the clicked on the modal backdrop). You must still set the visible flag since this is a stateless\n  rendering of a dialog UI, not an active stateful component.\n\n  You should include at most one of each of three following children for this node:\n\n  (ui-dialog {}\n    (ui-dialog-title {} title-nodes)\n    (ui-dialog-body {} body-nodes)\n    (ui-dialog-actions {} action-nodes)\n\n  The `title-nodes` can be any inline DOM (or just a string), as can body-nodes.  Action-notes must include at least one button that\n  closes the dialog or redirects the user.","^13","^14"],"~$DialogTitle",["^ ","~:protocol-inline",null,"^11",["^ ","~:jsdoc",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",406,"^Z",8,"^[",406,"^10",19,"~:arglists",["~#list",["~$quote",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/DialogTitle","~:variadic",false,"^X","src/main/untangled/ui/elements.cljc","^10",19,"~:method-params",["^1=",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^1=",[null,null]],"^Z",1,"^Y",406,"^[",406,"~:max-fixed-arity",0,"~:fn-var",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$ui-flat-button",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",110,"^Z",7,"^[",110,"^10",21,"^1<",["^1=",["^1>",["^1=",[[["^ ","~:keys",["~$className","~$size","~$color","~$shape","~$disabled","~$active"],"~:or",["^ ","^1H",""],"~:as","~$attrs"],"~$&","~$children"]]]]],"^12","Render a button that looks more like a link that a button (it is just the children), but renders the hover shape\n  of a more traditional button when the mouse is over it.\n\n  `:color` - :neutral (default), :primary, :accent\n  `:shape` - :rect (default), :round, or :wide.  The shape when the mouse is over the button.\n  `:size` - :normal (default), :small.  Small buttons are a bit more condensed.\n  `:active` - true or false (default).  Causes the button to look highlighted.\n\n  Any normal HTML/React properties are allowed, including additional CSS classes.\n  ","~:top-fn",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1P"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1P"],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-flat-button","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",21,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1P"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1P"],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1P"],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",110,"^[",110,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1P"],"~$&","^1Q"]]],"^12","Render a button that looks more like a link that a button (it is just the children), but renders the hover shape\n  of a more traditional button when the mouse is over it.\n\n  `:color` - :neutral (default), :primary, :accent\n  `:shape` - :rect (default), :round, or :wide.  The shape when the mouse is over the button.\n  `:size` - :normal (default), :small.  Small buttons are a bit more condensed.\n  `:active` - true or false (default).  Causes the button to look highlighted.\n\n  Any normal HTML/React properties are allowed, including additional CSS classes.\n  "],"~$ui-checkbox",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",249,"^Z",9,"^[",249,"^10",20,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["~$id","~$state","~$checked","^1H"],"^1O","~$props"]]]]]],"^12","Render a checkbox (not the label). Props is a normal clj(s) map with React/HTML attributes plus:\n\n    `:className` - additional class stylings to apply to the top level of the checkbox\n    `:id` string - Unique DOM ID. Required for correct rendering.\n    `:checked` - true, false, or :partial\n    "],"^H","~$untangled.ui.elements/ui-checkbox","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",20,"^1A",["^1=",[["~$p__704725"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",3,"^Y",249,"^[",249,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1U","^1V","^1W","^1H"],"^1O","^1X"]]]]]],"^12","Render a checkbox (not the label). Props is a normal clj(s) map with React/HTML attributes plus:\n\n    `:className` - additional class stylings to apply to the top level of the checkbox\n    `:id` string - Unique DOM ID. Required for correct rendering.\n    `:checked` - true, false, or :partial\n    "],"~$update-frame-content",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",48,"^Z",10,"^[",48,"^10",30,"^1<",["^1=",["^1>",["^1=",[["~$this","~$child"]]]]]],"^H","~$untangled.ui.elements/update-frame-content","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",30,"^1A",["^1=",[["^20","^21"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",4,"^Y",48,"^[",48,"^1D",2,"^1E",true,"^1<",["^1=",["^1>",["^1=",[["^20","^21"]]]]]],"~$ui-iframe",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",71,"^Z",10,"^[",71,"^10",19,"^1<",["^1=",["^1>",["^1=",[["^1X","^21"]]]]]],"^H","~$untangled.ui.elements/ui-iframe","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",19,"^1A",["^1=",[["^1X","^21"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",4,"^Y",71,"^[",71,"^1D",2,"^1E",true,"^1<",["^1=",["^1>",["^1=",[["^1X","^21"]]]]]],"~$ui-icon-bar",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",330,"^Z",7,"^[",330,"^10",18,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","~$orientation","~$shifting"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]]]],"^12","Render an icon bar using a vector of icons (each a map of attributes).\n   Can optionally render vertically and/or shifting.\n   Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n   `:orientation` :vertical or :horizontal (default)\n   `:shifting` true or false (default)\n\n   TODO: Example, talk about children\n\n   all parameters are optional\n   ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^26","^27"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^26","^27"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-icon-bar","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",18,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^26","^27"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^26","^27"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H","^26","^27"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",330,"^[",330,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^26","^27"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^12","Render an icon bar using a vector of icons (each a map of attributes).\n   Can optionally render vertically and/or shifting.\n   Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n   `:orientation` :vertical or :horizontal (default)\n   `:shifting` true or false (default)\n\n   TODO: Example, talk about children\n\n   all parameters are optional\n   "],"~$ui-loader",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",378,"^Z",7,"^[",378,"^10",16,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]]]]]]],"^12","Render an icon or a short string within an avatar. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none (default), :primary :accent"],"^H","~$untangled.ui.elements/ui-loader","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",16,"^1A",["^1=",[["~$p__704944"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",378,"^[",378,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]]]]]]],"^12","Render an icon or a short string within an avatar. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none (default), :primary :accent"],"~$ui-empty-state",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",589,"^Z",7,"^[",589,"^10",21,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","~$glyph","~$title","~$message"],"^1O","^1X","^1N",["^ ","^1H","u-absolute--middle-center","^2=","~:help","^2>","Nothing to see yet","^2?",""]]]]]]],"^12","Render an icon and text for when you can't display anything when you normally would have a collection of things.\n\n  `:glyph` - An icon glyph name to render a given icon.\n  `:title` - A string to announce what's missing\n  `:message` - A string to instruct the user what to do next\n  "],"^H","~$untangled.ui.elements/ui-empty-state","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",21,"^1A",["^1=",[["~$p__705459"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",589,"^[",589,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^2=","^2>","^2?"],"^1O","^1X","^1N",["^ ","^1H","u-absolute--middle-center","^2=","^2@","^2>","Nothing to see yet","^2?",""]]]]]]],"^12","Render an icon and text for when you can't display anything when you normally would have a collection of things.\n\n  `:glyph` - An icon glyph name to render a given icon.\n  `:title` - A string to announce what's missing\n  `:message` - A string to instruct the user what to do next\n  "],"~$DialogBody",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",415,"^Z",8,"^[",415,"^10",18,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/DialogBody","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",18,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",415,"^[",415,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$ui-field",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",283,"^Z",7,"^[",283,"^10",15,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1I","^1V","~$type"],"^1N",["^ ","^1I",""],"^1O","^1P"],"~$placeholder"]]]]],"^12","Render an input field. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:size` :regular (default), :small, :medium, :large\n  `:state` :valid (default), :invalid, or :error\n  "],"^H","~$untangled.ui.elements/ui-field","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",15,"^1A",["^1=",[["~$p__704813","^2G"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",283,"^[",283,"^1D",2,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1I","^1V","^2F"],"^1N",["^ ","^1I",""],"^1O","^1P"],"^2G"]]]]],"^12","Render an input field. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:size` :regular (default), :small, :medium, :large\n  `:state` :valid (default), :invalid, or :error\n  "],"~$react-instance?",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",34,"^Z",7,"^[",34,"^10",22,"^1<",["^1=",["^1>",["^1=",[["~$react-class","~$react-instance"]]]]],"^12","Returns the react-instance (which is logically true) iff the given react instance is an instance of the given react class.\n  Otherwise returns nil."],"^H","~$untangled.ui.elements/react-instance?","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",22,"^1A",["^1=",[["^2K","^2L"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",34,"^[",34,"^1D",2,"^1E",true,"^1<",["^1=",["^1>",["^1=",[["^2K","^2L"]]]]],"^12","Returns the react-instance (which is logically true) iff the given react instance is an instance of the given react class.\n  Otherwise returns nil."],"~$NotificationBody",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",494,"^Z",8,"^[",494,"^10",24,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/NotificationBody","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",24,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",494,"^[",494,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$Notification",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",502,"^Z",8,"^[",502,"^10",20,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/Notification","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",20,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",502,"^[",502,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$ui-badge",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",100,"^Z",7,"^[",100,"^10",15,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]]]],"^12","Render the given children within a badge. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `(ui-badge {} \"7\")`\n  ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-badge","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",15,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",100,"^[",100,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^12","Render the given children within a badge. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `(ui-badge {} \"7\")`\n  "],"~$ui-switch",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",263,"^Z",7,"^[",263,"^10",16,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1U","^1V","^1W","^1H","^1L"],"^1O","^1X"]]]]]],"^12","Render a checkbox (not the label). Props is a normal clj(s) map with React/HTML attributes plus:\n\n    `:className` - additional class stylings to apply to the top level of the checkbox\n    `:id` string - Unique DOM ID. Required for correct rendering.\n    `:checked` - true, false, or :partial\n    "],"^H","~$untangled.ui.elements/ui-switch","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",16,"^1A",["^1=",[["~$p__704783"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",263,"^[",263,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1U","^1V","^1W","^1H","^1L"],"^1O","^1X"]]]]]],"^12","Render a checkbox (not the label). Props is a normal clj(s) map with React/HTML attributes plus:\n\n    `:className` - additional class stylings to apply to the top level of the checkbox\n    `:id` string - Unique DOM ID. Required for correct rendering.\n    `:checked` - true, false, or :partial\n    "],"~$Dialog",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",433,"^Z",8,"^[",433,"^10",14,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/Dialog","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",14,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",433,"^[",433,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$ui-fader",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",13,"^Z",7,"^[",13,"^10",15,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["~$inline?","~$visible"],"^1O","^1X"],"~$&","^1Q"]]]]],"^12","Wrap children in a span where the :visible attribute\n  is a boolean indicating the visibility of the children.\n\n  Props is a clj(s) map of normal React attributes.\n\n  `:inline?` - A boolean (default false). When true, emits a `span`, else `div`.\n\n  You can get this same effect using the `u-fade-in` and `u-fade-out` CSS classes. See the CSS Guide.\n\n  When the resulting span becomes visible it fades in, and when it becomes hidden it fades out.","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^2Z","^2["],"^1O","^1X"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^2Z","^2["],"^1O","^1X"],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-fader","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",15,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^2Z","^2["],"^1O","^1X"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^2Z","^2["],"^1O","^1X"],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^2Z","^2["],"^1O","^1X"],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",13,"^[",13,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^2Z","^2["],"^1O","^1X"],"~$&","^1Q"]]],"^12","Wrap children in a span where the :visible attribute\n  is a boolean indicating the visibility of the children.\n\n  Props is a clj(s) map of normal React attributes.\n\n  `:inline?` - A boolean (default false). When true, emits a `span`, else `div`.\n\n  You can get this same effect using the `u-fade-in` and `u-fade-out` CSS classes. See the CSS Guide.\n\n  When the resulting span becomes visible it fades in, and when it becomes hidden it fades out."],"~$ui-tab",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",574,"^Z",7,"^[",574,"^10",13,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","~$label","~$kind","^1M"],"^1O","^1X","^1N",["^ ","^1H","","^32",""]]]]]]],"^12","Render an icon button for use inside an icon bar.\n\n  `:label` - A string of text to describe the tab action\n  `:kind` :default, :primary, or :contrast - changes the aesthetic style of a tab\n  `:active` true or false (default) - Usually used to show that your in that tab's view.\n\n  TODO: Add the ability to wrap this in a menu so you can show more than just the text.\n  "],"^H","~$untangled.ui.elements/ui-tab","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",13,"^1A",["^1=",[["~$p__705448"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",574,"^[",574,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^32","^33","^1M"],"^1O","^1X","^1N",["^ ","^1H","","^32",""]]]]]]],"^12","Render an icon button for use inside an icon bar.\n\n  `:label` - A string of text to describe the tab action\n  `:kind` :default, :primary, or :contrast - changes the aesthetic style of a tab\n  `:active` true or false (default) - Usually used to show that your in that tab's view.\n\n  TODO: Add the ability to wrap this in a menu so you can show more than just the text.\n  "],"~$ui-button",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",141,"^Z",7,"^[",141,"^10",16,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]]]],"^12","Render a raised button. Props is a normal clj(s) map with React/HTML attributes plus:\n\n  `:color` - :neutral (default), :primary, :accent\n  `:shape` - :rect (default), :round, or :wide\n  `:size` - :normal (default), :small\n  `:active` - true or false (default), Causes the button to look highlighted.\n\n  Any other React properties are allowed, including additional CSS classes.\n  ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-button","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",16,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",141,"^[",141,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1K","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]],"^12","Render a raised button. Props is a normal clj(s) map with React/HTML attributes plus:\n\n  `:color` - :neutral (default), :primary, :accent\n  `:shape` - :rect (default), :round, or :wide\n  `:size` - :normal (default), :small\n  `:active` - true or false (default), Causes the button to look highlighted.\n\n  Any other React properties are allowed, including additional CSS classes.\n  "],"~$ui-dialog-actions",["^ ","^H","~$untangled.ui.elements/ui-dialog-actions","^X","src/main/untangled/ui/elements.cljc","^Y",429,"^Z",1,"^[",429,"^10",23,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",429,"^Z",6,"^[",429,"^10",23],"^12","Render one or more action elements (e.g. buttons) in the action area of the dialog. Should only be used in a ui-dialog","^13","^14"],"~$ui-circular-button",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",154,"^Z",7,"^[",154,"^10",25,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]]]],"^12","Render a raised circle button of fixed size (configurable in CSS variables, see CSS guide).\n  Extra content will overflow out of the cirle. Props is a normal clj(s) map with React/HTML attributes plus:\n\n  `:color` - :neutral (default), :primary, :accent\n  `:size` - :normal (default), :small\n  `:active` - true or false (default), Causes the button to look highlighted.\n\n  Any other React properties are allowed, including additional CSS classes.\n\n  Note that you will typically only be able to fit something like an icon in this kind of button, which is a perfect\n  circle.\n  ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-circular-button","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",25,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",154,"^[",154,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^1I","^1J","^1L","^1M"],"^1N",["^ ","^1H",""],"^1O","^1X"],"~$&","^1Q"]]],"^12","Render a raised circle button of fixed size (configurable in CSS variables, see CSS guide).\n  Extra content will overflow out of the cirle. Props is a normal clj(s) map with React/HTML attributes plus:\n\n  `:color` - :neutral (default), :primary, :accent\n  `:size` - :normal (default), :small\n  `:active` - true or false (default), Causes the button to look highlighted.\n\n  Any other React properties are allowed, including additional CSS classes.\n\n  Note that you will typically only be able to fit something like an icon in this kind of button, which is a perfect\n  circle.\n  "],"~$DialogActions",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",424,"^Z",8,"^[",424,"^10",21,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/DialogActions","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",21,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",424,"^[",424,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$ui-icon-bar-item",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",350,"^Z",7,"^[",350,"^10",23,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^2=","^32","^1M"],"^1O","^1X","^1N",["^ ","^1H","","^32",""]]]]]]],"^12","Render an icon button for use inside an icon bar.\n\n  `:glyph` - An icon glyph name to render that given icon.\n  `:label` - A string to label that icon.\n  `:active` true or false (default) - Usually used to show that your in that action's view."],"^H","~$untangled.ui.elements/ui-icon-bar-item","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",23,"^1A",["^1=",[["~$p__704902"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",350,"^[",350,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^2=","^32","^1M"],"^1O","^1X","^1N",["^ ","^1H","","^32",""]]]]]]],"^12","Render an icon button for use inside an icon bar.\n\n  `:glyph` - An icon glyph name to render that given icon.\n  `:label` - A string to label that icon.\n  `:active` true or false (default) - Usually used to show that your in that action's view."],"~$ui-card",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",171,"^Z",7,"^[",171,"^10",14,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^33","^2>","^1J","^1I","~$image","~$image-position","~$actions","~$media-type","~$media","^Q","^1H"],"^1O","^1P"],"~$&","^1Q"]]]]],"^12","Render a card component\n\n   `:title` - \"Some Title\"\n   `:color` - :primary | :accent\n   `:kind` - :bordered | :transparent | :square\n   `:size` - :expand | :wide\n   `:image` - \"path/to/image/file.jpeg\"\n   `:image-position` - :cover | :top-left | :top-right | :bottom-left | :bottom-right\n   `:actions` - (ui-button \"Some Action\")\n   `:media` - URL\n   `:media-type` - :image | :video (TODO Youtube?)\n\n   all paramters optional\n    ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^33","^2>","^1J","^1I","^3B","^3C","^3D","^3E","^3F","^Q","^1H"],"^1O","^1P"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^33","^2>","^1J","^1I","^3B","^3C","^3D","^3E","^3F","^Q","^1H"],"^1O","^1P"],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-card","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",14,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^33","^2>","^1J","^1I","^3B","^3C","^3D","^3E","^3F","^Q","^1H"],"^1O","^1P"],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^33","^2>","^1J","^1I","^3B","^3C","^3D","^3E","^3F","^Q","^1H"],"^1O","^1P"],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^33","^2>","^1J","^1I","^3B","^3C","^3D","^3E","^3F","^Q","^1H"],"^1O","^1P"],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",171,"^[",171,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^33","^2>","^1J","^1I","^3B","^3C","^3D","^3E","^3F","^Q","^1H"],"^1O","^1P"],"~$&","^1Q"]]],"^12","Render a card component\n\n   `:title` - \"Some Title\"\n   `:color` - :primary | :accent\n   `:kind` - :bordered | :transparent | :square\n   `:size` - :expand | :wide\n   `:image` - \"path/to/image/file.jpeg\"\n   `:image-position` - :cover | :top-left | :top-right | :bottom-left | :bottom-right\n   `:actions` - (ui-button \"Some Action\")\n   `:media` - URL\n   `:media-type` - :image | :video (TODO Youtube?)\n\n   all paramters optional\n    "],"~$ui-dialog-body",["^ ","^H","~$untangled.ui.elements/ui-dialog-body","^X","src/main/untangled/ui/elements.cljc","^Y",420,"^Z",1,"^[",420,"^10",20,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",420,"^Z",6,"^[",420,"^10",20],"^12","Render the body of a dialog (using the supplied DOM children). Should only be used in a ui-dialog","^13","^14"],"~$ui-icon",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",306,"^Z",7,"^[",306,"^10",14,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]]]],"^12","Render an icon. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none (default), :active, :passive\n  `:size` :regular (default), :small, :medium, :large, :xlarge, :huge\n  `:glyph` - Instructs `ui-icon` to render an icon from the built-in set. See `untangled.icons/icon`.\n\n  The child (optional) should be some kind of icon, for example the SVG generated by the `untangled.icons/icon` function.\n  ","^1R",["^ ","^1@",false,"^1D",2,"^1A",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]],"^1C",["^1=",[null,null]]]],"^H","~$untangled.ui.elements/ui-icon","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",14,"^1R",["^ ","^1@",false,"^1D",2,"^1A",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]],"^1C",["^1=",[null,null]]],"^1A",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",306,"^[",306,"^1D",2,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]]],[["^ ","^1G",["^1H","^1J","^1I","^2="],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]],"^12","Render an icon. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none (default), :active, :passive\n  `:size` :regular (default), :small, :medium, :large, :xlarge, :huge\n  `:glyph` - Instructs `ui-icon` to render an icon from the built-in set. See `untangled.icons/icon`.\n\n  The child (optional) should be some kind of icon, for example the SVG generated by the `untangled.icons/icon` function.\n  "],"~$first-node",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",42,"^Z",7,"^[",42,"^10",17,"^1<",["^1=",["^1>",["^1=",[["^2K","~$sequence-of-react-instances"]]]]],"^12","Finds (and returns) the first child that is an instance of the given React class (or nil if not found)."],"^H","~$untangled.ui.elements/first-node","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",17,"^1A",["^1=",[["^2K","^3M"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",42,"^[",42,"^1D",2,"^1E",true,"^1<",["^1=",["^1>",["^1=",[["^2K","^3M"]]]]],"^12","Finds (and returns) the first child that is an instance of the given React class (or nil if not found)."],"~$NotificationTitle",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",484,"^Z",8,"^[",484,"^10",25,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/NotificationTitle","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",25,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",484,"^[",484,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]],"~$ui-notification",["^ ","^H","~$untangled.ui.elements/ui-notification","^X","src/main/untangled/ui/elements.cljc","^Y",529,"^Z",1,"^[",529,"^10",21,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",529,"^Z",6,"^[",529,"^10",21],"^12","Render a notification. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:onClose` (optional) - A function to call when the notification's close button is pressed\n  `:type` :none (default), :success, :warning, :error, :informative\n  `:size` :normal (default), :wide\n\n  You should include two children of this node:\n\n  (when show-notification?\n    (ui-notification {:onClose (fn [] (om/transact! this `[(my-close-notification-mutation)]))}\n      (ui-notification-title {} title-nodes)\n      (ui-notification-body {} body-nodes)))\n\n  The `title-nodes` can be any inline DOM (or just a string), as can body-nodes.","^13","^14"],"~$ui-message",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",392,"^Z",7,"^[",392,"^10",17,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]]]],"^12","Render the given children within a message. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none(default), :alert, :success, :warning, :informative\n  ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-message","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",17,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",392,"^[",392,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^12","Render the given children within a message. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none(default), :alert, :success, :warning, :informative\n  "],"~$ui-avatar",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",77,"^Z",7,"^[",77,"^10",16,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^33"],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]]]],"^12","Render an icon or a short string within an avatar. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` - :none (default), :primary, :accent\n  `:size` - :regular (default), :medium, :large, :xlarge:, :huge\n  `:kind` - :none (default), :bordered\n  "],"^H","~$untangled.ui.elements/ui-avatar","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",16,"^1A",["^1=",[["~$p__704505","^21"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",77,"^[",77,"^1D",2,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J","^1I","^33"],"^1O","^1X","^1N",["^ ","^1H",""]],"^21"]]]]],"^12","Render an icon or a short string within an avatar. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` - :none (default), :primary, :accent\n  `:size` - :regular (default), :medium, :large, :xlarge:, :huge\n  `:kind` - :none (default), :bordered\n  "],"~$ui-progress",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",546,"^Z",7,"^[",546,"^10",18,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["~$max","~$value","^1H","^1I"],"^1N",["^ ","^1H",""],"^1O","^1X"]]]]]],"^12","Render an HTML progress element. Props is a normal clj(s) map with React/HTML attributes plus:\n\n  `:className` - additional class stylings to apply to the progress element\n  `:max` - The integer value that we're targeting for completion\n  `:value` - The integer value of where we're at\n  `:size` :regular (default), :dense\n\n  If neither max or value are given, it will render as an indeterminate progress (in progress, but not complete).\n  "],"^H","~$untangled.ui.elements/ui-progress","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",18,"^1A",["^1=",[["~$p__705416"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",1,"^Y",546,"^[",546,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^3Y","^3Z","^1H","^1I"],"^1N",["^ ","^1H",""],"^1O","^1X"]]]]]],"^12","Render an HTML progress element. Props is a normal clj(s) map with React/HTML attributes plus:\n\n  `:className` - additional class stylings to apply to the progress element\n  `:max` - The integer value that we're targeting for completion\n  `:value` - The integer value of where we're at\n  `:size` :regular (default), :dense\n\n  If neither max or value are given, it will render as an indeterminate progress (in progress, but not complete).\n  "],"~$ui-tabs",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",563,"^Z",7,"^[",563,"^10",14,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]]]],"^12","Render a container for tabs using a vector of icons (each a map of attributes).\n   Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n   all parameters are optional\n   ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-tabs","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",14,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",563,"^[",563,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^12","Render a container for tabs using a vector of icons (each a map of attributes).\n   Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n   all parameters are optional\n   "],"~$ui-radio",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",236,"^Z",9,"^[",236,"^10",17,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1U"],"^1O","^1X"]]]]]],"^12","Render a HTML radio (without the label). Props is a normal clj(s) map with React/HTML attributes plus:\n\n    `:className` - additional class stylings to apply to the top level of the checkbox\n    `:id` - Required. A unique ID. Will not render correctly without one.\n    "],"^H","~$untangled.ui.elements/ui-radio","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",17,"^1A",["^1=",[["~$p__704716"]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",3,"^Y",236,"^[",236,"^1D",1,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1U"],"^1O","^1X"]]]]]],"^12","Render a HTML radio (without the label). Props is a normal clj(s) map with React/HTML attributes plus:\n\n    `:className` - additional class stylings to apply to the top level of the checkbox\n    `:id` - Required. A unique ID. Will not render correctly without one.\n    "],"~$ui-notification-title",["^ ","^H","~$untangled.ui.elements/ui-notification-title","^X","src/main/untangled/ui/elements.cljc","^Y",490,"^Z",1,"^[",490,"^10",27,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",490,"^Z",6,"^[",490,"^10",27],"^12","Render a notification title. Should only be used in a ui-notification","^13","^14"],"~$ui-label",["^ ","^1:",null,"^11",["^ ","^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",363,"^Z",7,"^[",363,"^10",15,"^1<",["^1=",["^1>",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]]]],"^12","Render the given children within a label. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none (default), :primary, :accent\n  ","^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]]],"^H","~$untangled.ui.elements/ui-label","^1@",true,"^X","src/main/untangled/ui/elements.cljc","^10",15,"^1R",["^ ","^1@",true,"^1D",1,"^1A",[["^1=",[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1<",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^1C",["^1=",[null]]],"^1A",[["^1=",[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"^1Q"]]],"^1B",null,"^1C",["^1=",[null]],"^Z",1,"^Y",363,"^[",363,"^1D",1,"^1E",true,"^1<",["^1=",[[["^ ","^1G",["^1H","^1J"],"^1O","^1X","^1N",["^ ","^1H",""]],"~$&","^1Q"]]],"^12","Render the given children within a label. Normal HTML/React attributes can be included, and should be a cljs map (not a js object).\n\n  `:color` :none (default), :primary, :accent\n  "],"~$IFrame",["^ ","^1:",null,"^11",["^ ","^1;",["@constructor"],"^X","/Users/Stephen/projects/untangled-ui/src/main/untangled/ui/elements.cljc","^Y",54,"^Z",11,"^[",54,"^10",17,"^1<",["^1=",["^1>",["^1=",[[]]]]]],"^H","~$untangled.ui.elements/IFrame","^1@",false,"^X","src/main/untangled/ui/elements.cljc","^10",17,"^1A",["^1=",[[]]],"^1B",null,"^1C",["^1=",[null,null]],"^Z",4,"^Y",54,"^[",54,"^1D",0,"^1E",true,"^1<",["^1=",["^1>",["^1=",[[]]]]],"^1;",["@constructor"]]],"~:require-macros",["^ ","^O","^P","^P","^P","^R","^C","^C","^C"],"~:cljs.analyzer/constants",["^ ","~:seen",["^G",["~:large","~:huge","~:informative","~:xlarge","~:transparent","~:primary","~:color","~:aria-hidden","~:key","~:placeholder","~:disabled","~:om.next/queries","~:states","~:config","~:shifting","~:bordered","~:medium","~:value","~:positive","~:onClose","~:width","~:contrast","~:orientation","~:vertical","~:type","~:invalid","~:state","~:icon","~:close","~:actions","~:modal","~:ref->components","~:className","~:size","~:title","~:passive","~:round","~:small","~:style","~:warning","~:inline?","~:partial","~:success","~:max","~:active","~:label","~:id","~:frame-component","~:kind","~:square","~:indexer","~:checked","~:glyph","~:backgroundImage","~:image-position","~:shape","~:info","~:full-screen","~:aria-disabled","~:check_circle","~:image","~:error","~:dense","~:child","~:wide","~:indexes","^2@","~:aria-label","~:visible","~:border","~:accent","~:expand","~:media","~:always","~:menu","~:message","~:media-type"]],"~:order",["^5;","^5V","^53","^5B","^4L","^5E","^5T","^52","^4Y","^4J","^5W","^5R","^4E","^54","^5C","^4D","^5X","^4?","^4@","^4B","^4O","^4N","^5[","^5J","^4I","^5?","^57","^5S","^58","^4W","^5M","^5Z","^60","^62","^50","^55","^5I","^5O","^4C","^5D","^5Y","^5H","^59","^4Z","^5A","^5F","^5<","^4X","^5P","^4H","^5U","^5G","^56","^4U","^4M","^4V","^5@","^4F","^4G","^5L","^51","^4R","^4S","^4A","^5:","^5=","^5N","^4K","^4Q","^5K","^4[","^5>","^4P","^5Q","^4T","^2@","^61"]],"^12",null]