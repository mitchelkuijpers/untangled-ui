["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Object",["^ "],"~$parseFloat",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$send"]],"~:name","~$untangled.client.impl.network","~:imports",["^ ","~$XhrIo","~$goog.net.XhrIo","~$EventType","~$goog.net.EventType"],"~:requires",["^ ","~$t","~$om.transit","~$log","~$untangled.client.logging","~$ct","~$cognitect.transit","^?","^@","^F","^F","~$events","~$goog.events","^=","^>","^D","^D","~$str","~$clojure.string","^J","^J","^H","^H","^B","^B"],"~:uses",null,"~:defs",["^ ","~$->MockNetwork",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","~:line",125,"~:column",12,"~:end-line",125,"~:end-column",23,"~:internal-ctor",true,"~:factory","~:positional","~:arglists",["~#list",["~$quote",["^Y",[["~$complete-app"]]]]]],"^:","~$untangled.client.impl.network/->MockNetwork","~:variadic",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",23,"~:method-params",["^Y",[["^["]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^R",1,"^U",true,"^V","^W","^Q",125,"^S",125,"~:max-fixed-arity",1,"~:fn-var",true,"^X",["^Y",["^Z",["^Y",[["^["]]]]]],"~$response-ok",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",27,"^R",4,"^S",27,"^T",15,"~:protocol","~$untangled.client.impl.network/IXhrIOCallbacks","~:doc","Called by XhrIo on OK","^X",["^Y",["^Z",["^Y",[["~$this","~$xhrio","~$ok-cb"]]]]]],"^18","^19","^:","~$untangled.client.impl.network/response-ok","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",15,"^12",["^Y",[["^1;","^1<","^1="]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^Q",26,"^S",27,"^15",3,"^16",true,"^X",["^Y",["^Z",["^Y",[["^1;","^1<","^1="]]]]],"^1:","Called by XhrIo on OK"],"~$->Network",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",44,"^R",12,"^S",44,"^T",19,"^U",true,"^V","^W","^X",["^Y",["^Z",["^Y",[["~$url","~$request-transform","~$global-error-callback","^[","~$transit-handlers"]]]]]],"^:","~$untangled.client.impl.network/->Network","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",19,"^12",["^Y",[["^1@","^1A","^1B","^[","^1C"]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^U",true,"^V","^W","^Q",44,"^S",44,"^15",5,"^16",true,"^X",["^Y",["^Z",["^Y",[["^1@","^1A","^1B","^[","^1C"]]]]]],"~$response-error",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",28,"^R",4,"^S",28,"^T",18,"^18","^19","^1:","Called by XhrIo on ERROR","^X",["^Y",["^Z",["^Y",[["^1;","^1<","~$err-cb"]]]]]],"^18","^19","^:","~$untangled.client.impl.network/response-error","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",18,"^12",["^Y",[["^1;","^1<","^1F"]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^Q",26,"^S",28,"^15",3,"^16",true,"^X",["^Y",["^Z",["^Y",[["^1;","^1<","^1F"]]]]],"^1:","Called by XhrIo on ERROR"],"~$IXhrIOCallbacks",["^ ","^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",26,"^R",14,"^S",26,"^T",29,"^1:",null,"~:protocol-symbol",true,"~:jsdoc",["^Y",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","^17",[["^1;","^1<","^1="]],"^1E",[["^1;","^1<","^1F"]]]]],"^1I",true,"^:","^19","^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",29,"^R",1,"^Q",26,"^1K",["^ ","^1L",["^ ","^17",[["^1;","^1<","^1="]],"^1E",[["^1;","^1<","^1F"]]]],"~:info",null,"^S",26,"~:tag","~$any","~:impls",["^8",["~$untangled.client.impl.network/Network"]],"^1:",null,"^1J",["^Y",["@interface"]]],"~$MockNetwork",["^ ","~:num-fields",1,"~:protocols",["^8",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$untangled.client.impl.network/UntangledNetwork","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^:","~$untangled.client.impl.network/MockNetwork","^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",23,"~:type",true,"^R",12,"^U",true,"^Q",125,"~:record",true,"^S",125,"~:skip-protocol-flag",["^8",["^1U","^1V","^1W","^1X","^1Y","^1[","^20","^21","^22","^24","^25","^26","^27"]]],"~$updating-send",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",16,"^R",4,"^S",16,"^T",17,"^18","~$untangled.client.impl.network/ProgressiveTransfer","^1:","Send EDN. The update-callback will merge the state\n  given to it. The done-callback will merge the state given to it, and indicates completion.","^X",["^Y",["^Z",["^Y",[["^1;","~$edn","~$done-callback","~$error-callback","~$update-callback"]]]]]],"^18","^2=","^:","~$untangled.client.impl.network/updating-send","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",17,"^12",["^Y",[["^1;","^2>","^2?","^2@","^2A"]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^Q",15,"^S",16,"^15",5,"^16",true,"^X",["^Y",["^Z",["^Y",[["^1;","^2>","^2?","^2@","^2A"]]]]],"^1:","Send EDN. The update-callback will merge the state\n  given to it. The done-callback will merge the state given to it, and indicates completion."],"~$UntangledNetwork",["^ ","^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",19,"^R",14,"^S",19,"^T",30,"^1:",null,"^1I",true,"^1J",["^Y",["@interface"]],"^1K",["^ ","^1L",["^ ","^9",[["^1;","^2>","^2?","^2@"]],"~$start",[["^1;","^["]]]]],"^1I",true,"^:","^1Z","^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",30,"^R",1,"^Q",19,"^1K",["^ ","^1L",["^ ","^9",[["^1;","^2>","^2?","^2@"]],"^2D",[["^1;","^["]]]],"^1M",null,"^S",19,"^1N","^1O","^1P",["^8",["^28","^1Q"]],"^1:",null,"^1J",["^Y",["@interface"]]],"~$mock-network",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",132,"^R",7,"^S",132,"^T",19,"^X",["^Y",["^Z",["^Y",[[]]]]]],"^:","~$untangled.client.impl.network/mock-network","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",19,"^12",["^Y",[[]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^Q",132,"^S",132,"^15",0,"^16",true,"^X",["^Y",["^Z",["^Y",[[]]]]]],"~$Network",["^ ","^1S",5,"^1T",["^8",["^1U","^1V","^1W","^1X","^19","^1Y","^1Z","^1[","^20","^21","^22","^23","^24","^25","^26","^27"]],"^:","^1Q","^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",19,"^29",true,"^R",12,"^U",true,"^Q",44,"^2:",true,"^S",44,"^2;",["^8",["^1U","^1V","^1W","^1X","^1Y","^1[","^20","^21","^22","^24","^25","^26","^27"]]],"~$map->Network",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",44,"^R",12,"^S",44,"^T",19,"^U",true,"^V","~:map","^X",["^Y",["^Z",["^Y",[["~$G__701494"]]]]]],"^:","~$untangled.client.impl.network/map->Network","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",19,"^12",["^Y",[["^2J"]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^U",true,"^V","^2I","^Q",44,"^S",44,"^15",1,"^16",true,"^X",["^Y",["^Z",["^Y",[["^2J"]]]]]],"^2D",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",23,"^R",4,"^S",23,"^T",9,"^18","^1Z","^1:","Starts the network, passing in the app for any components that may need it.","^X",["^Y",["^Z",["^Y",[["^1;","^["]]]]]],"^18","^1Z","^:","~$untangled.client.impl.network/start","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",9,"^12",["^Y",[["^1;","^["]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^Q",19,"^S",23,"^15",2,"^16",true,"^X",["^Y",["^Z",["^Y",[["^1;","^["]]]]],"^1:","Starts the network, passing in the app for any components that may need it."],"~$make-untangled-network",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",94,"^R",7,"^S",94,"^T",29,"^X",["^Y",["^Z",["^Y",[["^1@","~$&",["^ ","~:keys",["^1A","^1B","^1C"]]]]]]],"^1:","TODO: This is PUBLIC API! Should not be in impl ns.\n\n  Build an Untangled Network object using the default implementation.\n\n  Features:\n\n  - Can configure the target URL on the server for Om network requests\n  - Can supply a (fn [{:keys [body headers] :as req}] req') to transform arbitrary requests (e.g. to add things like auth headers)\n  - Supports a global error callback (fn [status-code error] ) that is notified when a 400+ status code or hard network error occurs\n  - `transit-handlers`: A map of transit handlers to install on the reader, such as\n\n   `{ :read { \"thing\" (fn [wire-value] (convert wire-value))) }\n      :write { Thing (ThingHandler.) } }`\n\n   where:\n\n   (defrecord Thing [foo])\n\n   (deftype ThingHandler []\n     Object\n     (tag [_ _] \"thing\")\n     (rep [_ thing] (make-raw thing))\n     (stringRep [_ _] nil)))\n  ","~:top-fn",["^ ","^11",true,"^15",1,"^12",[["^Y",["^1@",["^ ","^2N",["^1A","^1B","^1C"]]]]],"^X",["^Y",[["^1@","~$&",["^ ","^2N",["^1A","^1B","^1C"]]]]],"^14",["^Y",[null]]]],"^:","~$untangled.client.impl.network/make-untangled-network","^11",true,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",29,"^2O",["^ ","^11",true,"^15",1,"^12",[["^Y",["^1@",["^ ","^2N",["^1A","^1B","^1C"]]]]],"^X",["^Y",[["^1@","~$&",["^ ","^2N",["^1A","^1B","^1C"]]]]],"^14",["^Y",[null]]],"^12",[["^Y",["^1@",["^ ","^2N",["^1A","^1B","^1C"]]]]],"^13",null,"^14",["^Y",[null]],"^R",1,"^Q",94,"^S",94,"^15",1,"^16",true,"^X",["^Y",[["^1@","~$&",["^ ","^2N",["^1A","^1B","^1C"]]]]],"^1:","TODO: This is PUBLIC API! Should not be in impl ns.\n\n  Build an Untangled Network object using the default implementation.\n\n  Features:\n\n  - Can configure the target URL on the server for Om network requests\n  - Can supply a (fn [{:keys [body headers] :as req}] req') to transform arbitrary requests (e.g. to add things like auth headers)\n  - Supports a global error callback (fn [status-code error] ) that is notified when a 400+ status code or hard network error occurs\n  - `transit-handlers`: A map of transit handlers to install on the reader, such as\n\n   `{ :read { \"thing\" (fn [wire-value] (convert wire-value))) }\n      :write { Thing (ThingHandler.) } }`\n\n   where:\n\n   (defrecord Thing [foo])\n\n   (deftype ThingHandler []\n     Object\n     (tag [_ _] \"thing\")\n     (rep [_ thing] (make-raw thing))\n     (stringRep [_ _] nil)))\n  "],"~$parse-response",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",31,"^R",10,"^S",31,"^T",24,"^X",["^Y",["^Z",["^Y",[["~$xhr-io"],["^2R","~$read-handlers"]]]]],"^1:","An XhrIo-specific implementation method for interpreting the server response.","^2O",["^ ","^11",false,"^15",2,"^12",["^Y",[["^2R"],["^2R","^2S"]]],"^X",["^Y",[["^2R"],["^2R","^2S"]]],"^14",["^Y",[null,null]]]],"^:","~$untangled.client.impl.network/parse-response","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",24,"^2O",["^ ","^11",false,"^15",2,"^12",["^Y",[["^2R"],["^2R","^2S"]]],"^X",["^Y",[["^2R"],["^2R","^2S"]]],"^14",["^Y",[null,null]]],"^12",["^Y",[["^2R"],["^2R","^2S"]]],"^13",null,"^14",["^Y",[null,null]],"^R",4,"^Q",31,"^S",31,"^15",2,"^16",true,"^X",["^Y",[["^2R"],["^2R","^2S"]]],"^1:","An XhrIo-specific implementation method for interpreting the server response."],"~$ProgressiveTransfer",["^ ","^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",15,"^R",14,"^S",15,"^T",33,"^1:",null,"^1I",true,"^1J",["^Y",["@interface"]],"^1K",["^ ","^1L",["^ ","^2<",[["^1;","^2>","^2?","^2@","^2A"]]]]],"^1I",true,"^:","^2=","^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",33,"^R",1,"^Q",15,"^1K",["^ ","^1L",["^ ","^2<",[["^1;","^2>","^2?","^2@","^2A"]]]],"^1M",null,"^S",15,"^1N","^1O","^1P",["^8",[]],"^1:",null,"^1J",["^Y",["@interface"]]],"~$make-xhrio",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",13,"^R",10,"^S",13,"^T",20,"^X",["^Y",["^Z",["^Y",[[]]]]],"^1:","This is here (not inlined) to make mocking easier."],"^:","~$untangled.client.impl.network/make-xhrio","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",20,"^12",["^Y",[[]]],"^13",null,"^14",["^Y",[null,null]],"^R",4,"^Q",13,"^S",13,"^15",0,"^16",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^1:","This is here (not inlined) to make mocking easier."],"^9",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",20,"^R",4,"^S",20,"^T",8,"^18","^1Z","^1:","Send EDN. Calls either the done or error callback when the send is done, and optionally calls the update-callback\n    one or more times during the transfer (if not nil and supported)","^X",["^Y",["^Z",["^Y",[["^1;","^2>","^2?","^2@"]]]]]],"^18","^1Z","^:","~$untangled.client.impl.network/send","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",8,"^12",["^Y",[["^1;","^2>","^2?","^2@"]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^Q",19,"^S",20,"^15",4,"^16",true,"^X",["^Y",["^Z",["^Y",[["^1;","^2>","^2?","^2@"]]]]],"^1:","Send EDN. Calls either the done or error callback when the send is done, and optionally calls the update-callback\n    one or more times during the transfer (if not nil and supported)"],"~$map->MockNetwork",["^ ","^N",null,"^O",["^ ","^P","/Users/Stephen/projects/untangled-ui/resources/public/js/guide/untangled/client/impl/network.cljc","^Q",125,"^R",12,"^S",125,"^T",23,"^U",true,"^V","^2I","^X",["^Y",["^Z",["^Y",[["~$G__701633"]]]]]],"^:","~$untangled.client.impl.network/map->MockNetwork","^11",false,"^P","resources/public/js/guide/untangled/client/impl/network.cljc","^T",23,"^12",["^Y",[["^2Z"]]],"^13",null,"^14",["^Y",[null,null]],"^R",1,"^U",true,"^V","^2I","^Q",125,"^S",125,"^15",1,"^16",true,"^X",["^Y",["^Z",["^Y",[["^2Z"]]]]]]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["^[","~:read","~:else","~:transit-handlers","^29","~:handlers","~:global-error-callback","~:headers","^1C","~:write","~:request-transform","~:url","^1B","~:error","^1A","~:network","~:body","~:complete-app","^1@","~:message"]],"~:order",["^3<","^3@","^34","^36","^3;","^3:","^37","^3?","^35","^33","^29","^3=","^39","^3>","^38","^1@","^1A","^1B","^[","^1C"]],"^1:",null]